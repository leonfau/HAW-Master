-- Spezifikation Schrankensystem mit Prüfungen
-- Übung TH2, WS 11/12

------------
--Datentypen 
------------ 

 nametype ZId = {0,1,2,3}  
 datatype SegId = l1|l2|r1|r2 -- links 1 und 2, rechts 1 und 2 
 datatype SigStates = r|g -- Signalzustand rot, grün 
 datatype SegState = unten|oben|senken|heben -- Segmentzustand 
 channel zug_kommt, zug_rein, zug_raus: ZId 
 channel df_anfrage, df_freigabe: ZId  -- Durchfahrt Anfrage und Freigabe 
 channel seg_senken, seg_heben, seg_unten, seg_oben: SegId

------------
--Basisprozesse
------------ 


SEGMENT (id, status) = (status ==oben & seg_senken?id -> SEGMENT(id, senken))
					   []
					   (status == senken & (seg_heben?id -> SEGMENT(id, heben)) [] (seg_unten?id -> SEGMENT(id, unten)))
					   []
					   (status == unten & seg_heben?id -> SEGMENT(id, heben))
					   []
					   (status == heben & (seg_senken?id -> SEGMENT(id, senken)) 
										   [] (seg_oben?id -> SEGMENT(id, oben)))
					   
			
SENKEN() = seg_senken!l1 -> seg_senken!l2 -> 
					((seg_unten?l1 -> seg_unten?l2 -> SENKEN_RECHTS()) 
					[] 
					(seg_unten?l2 -> seg_unten?l1-> SENKEN_RECHTS()))
	
SENKEN_RECHTS() = seg_senken!r1 -> seg_senken!r2 -> 
					((seg_unten?r1 -> seg_unten?r2 -> SKIP) 
					[] 
					(seg_unten?r2 -> seg_unten?r1-> SKIP))
					
HEBEN() = seg_heben!l1 -> seg_heben!l2 -> seg_heben!r1 -> seg_heben!r2 -> SKIP
					
					
STEUER() = df_anfrage?zid  -> FREIGEBEN(zid)
FREIGEBEN(zid) = SENKEN() ; df_freigabe!zid -> zug_rein?zid -> zug_raus?zid -> STEUER()

SIGNAL (state) = (df_freigabe?zid -> SIGNAL(g))
				[]
				(zug_raus?zid -> SIGNAL(r))


ZUG (zid) = zug_kommt!zid -> df_anfrage!zid -> df_freigabe?zid -> zug_rein!zid -> zug_raus!zid -> ZUG(zid)

------------
--Gesamtsystem
------------ 
A = {|df_anfrage, df_freigabe, zug_rein|}
--SYS = STEUER [|A|] ZUG(1)

------------
--Prüfungen
------------ 

-- Zug fährt nur wenn alle Schranken unten sind


-- Kein Zug ist dauerhaft blockiert
